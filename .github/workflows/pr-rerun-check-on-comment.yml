name: Re-run Playwright via comment

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: read
  actions: write # needed to cancel & dispatch

jobs:
  rerun:
    # PR only, exact match "Run test", and ignore bot comments
    if: >
      github.event.issue.pull_request &&
      github.event.comment.body == 'Run test' &&
      github.event.comment.user.type != 'Bot'
    runs-on: ubuntu-latest
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const prNumber = context.payload.issue.number;
            const pr = await github.rest.pulls.get({ owner, repo, pull_number: prNumber });
            core.setOutput('prNumber', String(prNumber));
            core.setOutput('headRef', pr.data.head.ref);
            core.setOutput('headSha', pr.data.head.sha);
            const isSameRepo = pr.data.head.repo.full_name === `${owner}/${repo}`;
            core.setOutput('isSameRepo', String(isSameRepo));

      - name: Cancel active/queued PR Playwright runs for this PR
        if: ${{ steps.pr.outputs.isSameRepo == 'true' }}
        env:
          PR_NUMBER: ${{ steps.pr.outputs.prNumber }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const prNumber = Number(process.env.PR_NUMBER);
            const resp = await github.request(
              'GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs',
              { owner, repo, workflow_id: 'pr-test.yml', per_page: 100 }
            );
            const runs = resp.data.workflow_runs || [];

            const targets = runs.filter(wr => {
              const isSamePR = (wr.pull_requests || []).some(p => p.number === prNumber);
              const active = ['in_progress','queued'].includes(wr.status);
              return isSamePR && active;
            });

            for (const wr of targets) {
              try { await github.rest.actions.cancelWorkflowRun({ owner, repo, run_id: wr.id }); } catch {}
            }

      - name: Dispatch PR Playwright Checks on PR branch (updates Checks tab)
        if: ${{ steps.pr.outputs.isSameRepo == 'true' }}
        env:
          PR_NUMBER: ${{ steps.pr.outputs.prNumber }}
          HEAD_REF: ${{ steps.pr.outputs.headRef }}
          HEAD_SHA: ${{ steps.pr.outputs.headSha }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            await github.rest.actions.createWorkflowDispatch({
              owner, repo,
              workflow_id: 'pr-test.yml',
              ref: process.env.HEAD_REF,   // run on PR branch head
              inputs: {
                pr_number: process.env.PR_NUMBER,
                head_sha:  process.env.HEAD_SHA
              }
            });
